{"version":3,"sources":["Table.js","App.js","index.js"],"names":["Table","editedRowValues","dispatchEditedRowValues","rows","dispatchRows","editedRowId","dispatchEditedRowId","_useContext","useContext","MyAppContext","state","dispatch","fieldNames","handleEditSpecificRow","idx","type","payload","handleSaveSpecificRow","handleRemoveSpecificRow","react_default","a","createElement","className","id","map","fieldName","i","key","item","name","value","onChange","e","target","disabled","onClick","createContext","App","Object","keys","mobile","test","ebg","_useReducer","useReducer","prevRows","action","currentRows","toConsumableArray","objectSpread","splice","uuid","concat","slice","_useReducer2","slicedToArray","_useReducer3","prevEditedRowValues","defineProperty","_useReducer4","_useReducer5","prevEditedRowId","length","_useReducer6","forEach","fn","Provider","src_Table","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d0cff37.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MyAppContext } from \"./App\"\r\n\r\nfunction Table() {\r\n\r\n  const { state, dispatch, fieldNames } = useContext(MyAppContext);\r\n\r\n  const { editedRowId, editedRowValues, rows } = state;\r\n\r\n  const handleEditedRowChange = () => e => {\r\n    dispatch({\r\n      type: \"EDITED_ROW_CHANGE\",\r\n      payload: {\r\n        name: e.target.name,\r\n        value: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleEditSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"EDIT_SPECIFIC_ROW\",\r\n      payload: {idx}\r\n    });\r\n  };\r\n\r\n  const handleSaveSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"SAVE_SPECIFIC_ROW\",\r\n      payload: {idx}\r\n    });\r\n  };\r\n\r\n  const handleRemoveSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"REMOVE_SPECIFIC_ROW\",\r\n      payload: {idx}\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-hover\"\r\n      id=\"tab_logic\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th className=\"text-center\"> # </th>\r\n          {fieldNames.map((fieldName, i) => (\r\n            <th\r\n              key={i}\r\n              className=\"text-center\"\r\n            >\r\n              {fieldName}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {rows.map((item, idx) => (\r\n          <tr\r\n            key={item.id}\r\n          >\r\n            <td>\r\n              {idx}\r\n            </td>\r\n\r\n            {fieldNames.map((fieldName, i) => (\r\n              <td\r\n                key={i}\r\n              >\r\n                {editedRowId === idx ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name={fieldName}\r\n                    value={editedRowValues[fieldName]}\r\n                    onChange={handleEditedRowChange()}\r\n                    className=\"form-control\"\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    disabled\r\n                    value={rows[idx][fieldName]}\r\n                    onChange={()=>{}}\r\n                    className=\"form-control\"\r\n                  />\r\n                )}\r\n              </td>\r\n            ))}\r\n\r\n            <td>\r\n              {editedRowId !== idx ? (\r\n                <button\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={handleEditSpecificRow(idx)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={handleSaveSpecificRow(idx)}\r\n                >\r\n                  Save\r\n                </button>\r\n              )}\r\n            </td>\r\n\r\n            <td>\r\n              <button\r\n                className=\"btn btn-outline-danger btn-sm\"\r\n                onClick={handleRemoveSpecificRow(idx)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useReducer, createContext } from \"react\";\r\nimport uuid from 'uuid/v4';\r\n\r\nexport const MyAppContext = createContext();\r\n\r\nlet editedRowValues, dispatchEditedRowValues,\r\n  rows, dispatchRows,\r\n  editedRowId, dispatchEditedRowId;\r\n\r\nfunction App() {\r\n  const fieldNames = Object.keys({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    test: \"\",\r\n    ebg: \"\",\r\n  });\r\n\r\n\r\n  const rowsReducer = (prevRows, action) => {\r\n    let currentRows = [...prevRows];\r\n    switch (action.type) {\r\n      case \"SAVE_SPECIFIC_ROW\":\r\n        currentRows[action.payload.idx] = {...editedRowValues};\r\n        return currentRows;\r\n      case \"REMOVE_SPECIFIC_ROW\":\r\n        currentRows.splice(action.payload.idx, 1);\r\n        return currentRows;\r\n      case \"ADD_ROW\":\r\n        const item = {id: uuid()};\r\n        fieldNames.map((fieldName) => (\r\n          item[fieldName]=\"\"\r\n        ))\r\n        return [...prevRows, item];\r\n      case \"REMOVE_ROW\":\r\n        return prevRows.slice(0, -1);\r\n      default:\r\n        return prevRows;\r\n    }\r\n  };\r\n\r\n  [rows, dispatchRows] = useReducer(rowsReducer, [{\r\n      id: uuid(),\r\n      name: \"\",\r\n      mobile: \"\",\r\n      test: \"\",\r\n      ebg: \"\",\r\n    }]\r\n  );\r\n\r\n\r\n  const editedRowValuesReducer = (prevEditedRowValues, action) => {\r\n    switch (action.type) {\r\n      case \"EDITED_ROW_CHANGE\":\r\n        return {\r\n          ...prevEditedRowValues,\r\n          [action.payload.name]: action.payload.value\r\n        };\r\n      case \"EDIT_SPECIFIC_ROW\":\r\n        return rows[action.payload.idx];\r\n      case \"SAVE_SPECIFIC_ROW\":\r\n        return {};\r\n      case \"ADD_ROW\":\r\n        const item = {id: uuid()};\r\n        fieldNames.map((fieldName) => (\r\n          item[fieldName]=\"\"\r\n        ))\r\n        return item;\r\n      case \"REMOVE_ROW\":\r\n        return {};\r\n      default:\r\n        return prevEditedRowValues;\r\n    }\r\n  };\r\n\r\n  [editedRowValues, dispatchEditedRowValues] = useReducer(\r\n    editedRowValuesReducer,\r\n    {}\r\n  );\r\n\r\n\r\n  const editedRowIdReducer = (prevEditedRowId, action) => {\r\n    switch (action.type) {\r\n      case \"EDIT_SPECIFIC_ROW\":\r\n        return action.payload.idx;\r\n      case \"SAVE_SPECIFIC_ROW\":\r\n        return \"\";\r\n      case \"REMOVE_SPECIFIC_ROW\":\r\n        return \"\";\r\n      case \"ADD_ROW\":\r\n        return rows.length-1;\r\n      case \"REMOVE_ROW\":\r\n        return \"\";\r\n      default:\r\n        return prevEditedRowId;\r\n    }\r\n  };\r\n\r\n  [editedRowId, dispatchEditedRowId] = useReducer(editedRowIdReducer, \"\");\r\n\r\n\r\n  const dispatch = action =>[\r\n    dispatchRows,\r\n    dispatchEditedRowValues,\r\n    dispatchEditedRowId\r\n  ].forEach(fn => fn(action));\r\n\r\n\r\n  const handleAddRow = () => {\r\n    dispatch({\r\n      type: \"ADD_ROW\"\r\n    });\r\n  };\r\n\r\n  const handleRemoveRow = () => {\r\n    dispatch({\r\n      type: \"REMOVE_ROW\"\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-md-12 column\">\r\n\r\n            <MyAppContext.Provider value={{\r\n              state: {editedRowId, editedRowValues, rows},\r\n              dispatch,\r\n              fieldNames\r\n            }}>\r\n              <Table />\r\n            </MyAppContext.Provider>\r\n\r\n            <button\r\n              onClick={handleAddRow}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Add Row\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleRemoveRow}\r\n              className=\"btn btn-danger float-right\"\r\n            >\r\n              Delete Last Row\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(\n  <App />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}