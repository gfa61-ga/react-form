{"version":3,"sources":["Table.js","reducers.js","App.js","index.js"],"names":["Table","_useContext","useContext","MyAppContext","state","dispatch","fieldNames","editedRowId","editedRowValues","rows","handleEditSpecificRow","idx","type","payload","rowValues","handleSaveSpecificRow","handleRemoveSpecificRow","react_default","a","createElement","className","id","map","fieldName","i","key","item","name","value","onChange","e","target","disabled","onClick","rowsReducer","prevRows","action","currentRows","Object","toConsumableArray","objectSpread","splice","uuid","concat","slice","editedRowValuesReducer","prevEditedRowValues","defineProperty","editedRowIdReducer","prevEditedRowId","newRowId","createContext","App","keys","mobile","test","ebg","_useReducer","useReducer","_useReducer2","slicedToArray","dispatchRows","_useReducer3","_useReducer4","dispatchEditedRowValues","_useReducer5","_useReducer6","dispatchEditedRowId","forEach","fn","Provider","src_Table","length","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b88dac73.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MyAppContext } from \"./App\"\r\n\r\nfunction Table() {\r\n\r\n  const { state, dispatch, fieldNames } = useContext(MyAppContext);\r\n\r\n  const { editedRowId, editedRowValues, rows } = state;\r\n\r\n  const handleEditedRowChange = () => e => {\r\n    dispatch({\r\n      type: \"EDITED_ROW_CHANGE\",\r\n      payload: {\r\n        name: e.target.name,\r\n        value: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleEditSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"EDIT_SPECIFIC_ROW\",\r\n      payload: {\r\n        idx,\r\n        rowValues: rows[idx]\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSaveSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"SAVE_SPECIFIC_ROW\",\r\n      payload: {\r\n        idx,\r\n        editedRowValues\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleRemoveSpecificRow = (idx) => () => {\r\n    dispatch({\r\n      type: \"REMOVE_SPECIFIC_ROW\",\r\n      payload: {\r\n        idx\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-hover\"\r\n      id=\"tab_logic\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th className=\"text-center\"> # </th>\r\n          {fieldNames.map((fieldName, i) => (\r\n            <th\r\n              key={i}\r\n              className=\"text-center\"\r\n            >\r\n              {fieldName}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {rows.map((item, idx) => (\r\n          <tr\r\n            key={item.id}\r\n          >\r\n            <td>\r\n              {idx}\r\n            </td>\r\n\r\n            {fieldNames.map((fieldName, i) => (\r\n              <td\r\n                key={i}\r\n              >\r\n                {editedRowId === idx ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name={fieldName}\r\n                    value={editedRowValues[fieldName]}\r\n                    onChange={handleEditedRowChange()}\r\n                    className=\"form-control\"\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    disabled\r\n                    value={rows[idx][fieldName]}\r\n                    onChange={()=>{}}\r\n                    className=\"form-control\"\r\n                  />\r\n                )}\r\n              </td>\r\n            ))}\r\n\r\n            <td>\r\n              {editedRowId !== idx ? (\r\n                <button\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={handleEditSpecificRow(idx)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={handleSaveSpecificRow(idx)}\r\n                >\r\n                  Save\r\n                </button>\r\n              )}\r\n            </td>\r\n\r\n            <td>\r\n              <button\r\n                className=\"btn btn-outline-danger btn-sm\"\r\n                onClick={handleRemoveSpecificRow(idx)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;","import uuid from 'uuid/v4';\r\n\r\nexport const rowsReducer = (prevRows, action) => {\r\n  let currentRows = [...prevRows];\r\n  switch (action.type) {\r\n    case \"SAVE_SPECIFIC_ROW\":\r\n      currentRows[action.payload.idx] = {...action.payload.editedRowValues};\r\n      return currentRows;\r\n    case \"REMOVE_SPECIFIC_ROW\":\r\n      currentRows.splice(action.payload.idx, 1);\r\n      return currentRows;\r\n    case \"ADD_ROW\":\r\n      const item = {id: uuid()};\r\n      action.payload.fieldNames.map((fieldName) => (\r\n        item[fieldName]=\"\"\r\n      ))\r\n      return [...prevRows, item];\r\n    case \"REMOVE_ROW\":\r\n      return prevRows.slice(0, -1);\r\n    default:\r\n      return prevRows;\r\n  }\r\n};\r\n\r\nexport const editedRowValuesReducer = (prevEditedRowValues, action) => {\r\n  switch (action.type) {\r\n    case \"EDITED_ROW_CHANGE\":\r\n      return {\r\n        ...prevEditedRowValues,\r\n        [action.payload.name]: action.payload.value\r\n      };\r\n    case \"EDIT_SPECIFIC_ROW\":\r\n      return action.payload.rowValues;\r\n    case \"SAVE_SPECIFIC_ROW\":\r\n      return {};\r\n    case \"ADD_ROW\":\r\n      const item = {id: uuid()};\r\n      action.payload.fieldNames.map((fieldName) => (\r\n        item[fieldName]=\"\"\r\n      ))\r\n      return item;\r\n    case \"REMOVE_ROW\":\r\n      return {};\r\n    default:\r\n      return prevEditedRowValues;\r\n  }\r\n};\r\n\r\nexport const editedRowIdReducer = (prevEditedRowId, action) => {\r\n  switch (action.type) {\r\n    case \"EDIT_SPECIFIC_ROW\":\r\n      return action.payload.idx;\r\n    case \"SAVE_SPECIFIC_ROW\":\r\n      return \"\";\r\n    case \"REMOVE_SPECIFIC_ROW\":\r\n      return \"\";\r\n    case \"ADD_ROW\":\r\n      return action.payload.newRowId;\r\n    case \"REMOVE_ROW\":\r\n      return \"\";\r\n    default:\r\n      return prevEditedRowId;\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useReducer, createContext } from \"react\";\r\nimport uuid from 'uuid/v4';\r\nimport {rowsReducer,editedRowValuesReducer, editedRowIdReducer}\r\n  from \"./reducers\";\r\n\r\nexport const MyAppContext = createContext();\r\n\r\nfunction App() {\r\n\r\n  const fieldNames = Object.keys({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    test: \"\",\r\n    ebg: \"\",\r\n  });\r\n\r\n\r\n  const [rows, dispatchRows] = useReducer(rowsReducer, [{\r\n      id: uuid(),\r\n      name: \"\",\r\n      mobile: \"\",\r\n      test: \"\",\r\n      ebg: \"\",\r\n    }]\r\n  );\r\n\r\n  const [editedRowValues, dispatchEditedRowValues] = useReducer(\r\n    editedRowValuesReducer,\r\n    {}\r\n  );\r\n\r\n  const [editedRowId, dispatchEditedRowId] = useReducer(editedRowIdReducer, \"\");\r\n\r\n\r\n  const dispatch = action =>[\r\n    dispatchRows,\r\n    dispatchEditedRowValues,\r\n    dispatchEditedRowId\r\n  ].forEach(fn => fn(action));\r\n\r\n\r\n  const handleAddRow = () => {\r\n    dispatch({\r\n      type: \"ADD_ROW\",\r\n      payload: {\r\n        newRowId: rows.length,\r\n        fieldNames\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleRemoveRow = () => {\r\n    dispatch({\r\n      type: \"REMOVE_ROW\"\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-md-12 column\">\r\n\r\n            <MyAppContext.Provider value={{\r\n              state: {\r\n                editedRowId,\r\n                editedRowValues,\r\n                rows\r\n              },\r\n              dispatch,\r\n              fieldNames\r\n            }}>\r\n              <Table />\r\n            </MyAppContext.Provider>\r\n\r\n            <button\r\n              onClick={handleAddRow}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Add Row\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleRemoveRow}\r\n              className=\"btn btn-danger float-right\"\r\n            >\r\n              Delete Last Row\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nrender(\n  <App />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}